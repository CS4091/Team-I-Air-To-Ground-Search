@page "/GenerateGrid"
@using System.Diagnostics
@rendermode InteractiveServer

<PageTitle>Air-to-Ground Grid Generator</PageTitle>

<h1>Air-to-Ground Grid Generator</h1>
<p>
    This page generates a grid world for the air-to-ground search problem.
</p>

@if(imageSource is not null)
{
    <p>
    <img src="@imageSource" alt="Grid World" />
    </p>
}

<button class="btn btn-primary" @onclick="Generate">Generate Grid</button>

<p></p>
<p role="status">Output: @gridResult</p>
<p role="status">Current Directory: @currentDirectory</p>

@code {
    private string gridResult = "";
    private string? imageSource;
    private string currentDirectory = "BLANK";

    protected override Task OnInitializedAsync()
    {
        currentDirectory = Directory.GetCurrentDirectory();
        return Task.CompletedTask;
    }
    private void Generate()
    {
        // Run script
        runPythonScript();
        imageSource = $"outputs/grid_world.png?{Guid.NewGuid()}";
        StateHasChanged(); // Trigger re-render
    }

    private void runPythonScript()
    {
        // Create a new process
        var psi = new ProcessStartInfo
        {
            FileName = "python",
            Arguments = "src/external/grid_world_search_generator.py",
            RedirectStandardOutput = true,
            UseShellExecute = false,
            CreateNoWindow = true
        };

        // Start the process
        using (var process = Process.Start(psi))
        {
            if (process != null)
            {
                // Read the output
                using (var reader = process.StandardOutput)
                {
                    string result = reader.ReadToEnd();
                    gridResult = result;
                }
            }
        }
    }
}
